name: Build and publish images

on:
  workflow_dispatch:
  schedule:
    - cron: "0 21 * * *"  # Every day at 21:00 (upstream builds at 19:20)

defaults:
  run:
    shell: bash

permissions:
  contents: read
  packages: write

jobs:
  publish:
    name: Build and push image to GitHub container registry
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        variant: [ silverblue, kinoite ]
        version: [ 36, 37 ]
        include:
          - version: 37
            latest: true

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup environment
        run: |
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

          # Capitalize first letter of variant to match Containerfile naming
          containerfile="${{ matrix.variant }}.containerfile"
          echo "CONTAINERFILE=${containerfile^}" >> $GITHUB_ENV

      - name: Check if parent image has updated
        id: check
        uses: twiddler/is-my-docker-parent-image-out-of-date@v1
        with:
          parent-image: ghcr.io/cgwalters/fedora-${{ matrix.variant }}:${{ matrix.version }}
          my-image: ghcr.io/${{ github.repository_owner }}/${{ matrix.variant }}:${{ matrix.version }}

      - name: Ensure upstream build is passing
        run: |
          echo "Upstream build is failing, bailing out ..." 1>&2
          exit 1
        if: steps.check.outputs.out-of-date == 'false'

      - name: Generate tags
        id: tag
        run: |
          tags=()

          if [[ "${{ matrix.latest }}" == "true" ]]; then
            tags+=("latest")
          fi

          echo "tags=${tags[*]}" >> $GITHUB_OUTPUT

      - name: Build image
        id: build
        uses: redhat-actions/buildah-build@v2
        with:
          context: src/
          containerfiles: src/${{ env.CONTAINERFILE }}
          build-args: |
            FEDORA_VERSION=${{ matrix.version }}
          image: ${{ matrix.variant }}
          tags: |
            ${{ matrix.version }}
            ${{ matrix.version }}.${{ env.DATE }}
            ${{ matrix.version }}.${{ env.SHA }}
            ${{ steps.tag.outputs.tags }}
          oci: true

      - name: Push to GitHub container registry
        id: push
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build.outputs.image }}
          tags: ${{ steps.build.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
