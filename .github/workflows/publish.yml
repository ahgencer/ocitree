name: Build and publish images

on:
  workflow_call:
    inputs:
      stable:
        required: true
        type: boolean
      version:
        required: true
        type: string

defaults:
  run:
    shell: bash

permissions:
  contents: read
  packages: write

jobs:
  publish:
    name: Build and push image to container registry
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        variant: [ silverblue, kinoite ]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup environment
        run: |
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "CONTAINERFILE=$(find src/ -type f -iname "${{ matrix.variant }}.containerfile")" >> $GITHUB_ENV

      - name: Generate tags
        id: tag
        run: |
          tags=()

          if [[ "${{ inputs.stable }}" == "true" ]]; then

            tags+=("${{ matrix.version }}")

            if [[ "${{ matrix.version }}" != "rawhide" ]]; then
              tags+=("${{ matrix.version }}.${{ env.DATE }}")
            fi

            if [[ "${{ inputs.version }}" == "37" ]]; then
              tags+=("latest")
            fi

          else
            tags+=("testing")
          fi

          echo "tags=${tags[*]}" >> $GITHUB_OUTPUT

      - name: Build image
        id: build
        uses: redhat-actions/buildah-build@v2
        with:
          context: src/
          containerfiles: ${{ env.CONTAINERFILE }}
          build-args: FEDORA_VERSION=${{ inputs.version }}
          image: ${{ matrix.variant }}
          tags: ${{ steps.tag.outputs.tags }}
          oci: true

      - name: Push to container registry
        uses: redhat-actions/push-to-registry@v2
        id: push
        with:
          image: ${{ steps.build.outputs.image }}
          tags: ${{ steps.build.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
